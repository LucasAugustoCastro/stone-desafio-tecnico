openapi: 3.0.0
info:
  title: Stone Desafio Tecnico API
  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000/
    description: Desenvolvimento
paths:
  /atendimentos:
    get:
      tags:
        - atendimentos      
      summary: Listar atendimentos
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by_id
          in: query
          schema:
            type: string
        - name: tecnico
          in: query
          schema:
            type: string
        - name: base_logistica
          in: query
          schema:
            type: string
        - name: data_limite_start
          in: query
          schema:
            type: string
        - name: data_limite_end
          in: query
          schema:
            type: string
        - name: data_de_atendimento_start
          in: query
          schema:
            type: string
        - name: data_de_atendimento_end
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Lista de atendimentos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atendimento'
    post:
      tags:
        - atendimentos      
      summary: Criar atendimento
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atendimento'
      responses:
        '201':
          description: Atendimento criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Atendimento'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /atendimentos/{id}:
    patch:
      tags:
        - atendimentos      
      summary: Atualizar atendimento
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtendimentoPatch'
      responses:
        '200':
          description: Atendimento atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Atendimento'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      tags:
        - auth      
      summary: Login de usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                senha:
                  type: string
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '400':
          description: Entrada inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Email ou senha incorretos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /usuarios:
    get:
      tags:
        - usuarios
      summary: Listar usuários
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      tags:
        - usuarios
      summary: Criar usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '201':
          description: Usuário criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /usuarios/{id}:
    get:
      tags:
        - usuarios
      summary: Obter usuário por ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuário não encontrado
    patch:
      tags:
        - usuarios
      summary: Atualizar usuário
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioPatch'
      responses:
        '200':
          description: Usuário atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - usuarios
      summary: Deletar usuário
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Usuário deletado
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
    UsuarioPatch:
      type: object
      properties:
        nome:
          type: string
        email:
          type: string
    Atendimento:
      type: object
      properties:
        id:
          type: integer
        id_cliente:
          type: integer
        angel:
          type: string
        polo:
          type: string
        data_limite:
          type: string
          format: date
        data_de_atendimento:
          type: string
          format: date-time
    AtendimentoPatch:
      type: object
      properties:
        id_cliente:
          type: integer
        angel:
          type: string
        polo:
          type: string
        data_limite:
          type: string
          format: date
        data_de_atendimento:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        error:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
